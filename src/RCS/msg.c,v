head	1.3;
access;
symbols
	ver1_2:1.3
	ver1_12:1.3
	ver1_11:1.3
	ver1_1:1.3
	ver1_03:1.3
	ver1_02:1.3
	v1_01:1.3
	v1_0:1.3
	beta1:1.3;
locks; strict;
comment	@ * @;


1.3
date	2011.10.26.01.11.24;	author kerryveenstra;	state Exp;
branches;
next	1.2;

1.2
date	2011.08.05.16.15.33;	author kerryveenstra;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.01.02.03.01;	author kerryveenstra;	state Exp;
branches;
next	;


desc
@error messages
@


1.3
log
@reverting to version as of 2011/07/17
@
text
@#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>

#include "msg.h"

void msg_message(const char *message, ...)
{
    va_list args;
    va_start(args, message);
    vfprintf(stdout, message, args);
    fprintf(stdout, "\n");
    va_end(args);
}

void msg_error(const char *message, ...)
{
    va_list args;
    va_start(args, message);
    fprintf(stdout, "Error: ");
    vfprintf(stdout, message, args);
    fprintf(stdout, "\n");
    va_end(args);

    exit(1);
}
@


1.2
log
@added msg_internal_error()
@
text
@a26 19

void msg_internal_error(const char *filename, int line, const char *message, ...)
{
    va_list args;
    va_start(args, message);
    fprintf(stdout, "Internal error %s(%d): ", filename, line);
    vfprintf(stdout, message, args);
    fprintf(stdout, "\n");
    va_end(args);

    exit(1);
}

void msg_condition_failed(const char *filename, int line, const char *condition)
{
    fprintf(stdout, "Internal error %s(%d): assertion %s failed\n", filename, line, condition);

    exit(1);
}
@


1.1
log
@Initial revision
@
text
@d27 19
@
