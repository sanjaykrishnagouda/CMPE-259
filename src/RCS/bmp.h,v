head	1.14;
access;
symbols
	ver1_2:1.13
	ver1_12:1.12
	ver1_11:1.11
	ver1_1:1.10
	ver1_03:1.10
	ver1_02:1.10
	v1_01:1.10
	v1_0:1.10
	beta1:1.10;
locks; strict;
comment	@ * @;


1.14
date	2013.06.14.02.44.33;	author kerryveenstra;	state Exp;
branches;
next	1.13;

1.13
date	2011.12.07.07.47.32;	author kerryveenstra;	state Exp;
branches;
next	1.12;

1.12
date	2011.11.18.06.02.22;	author kerryveenstra;	state Exp;
branches;
next	1.11;

1.11
date	2011.11.16.06.03.49;	author kerryveenstra;	state Exp;
branches;
next	1.10;

1.10
date	2011.10.26.01.07.03;	author kerryveenstra;	state Exp;
branches;
next	1.9;

1.9
date	2011.08.05.16.08.19;	author kerryveenstra;	state Exp;
branches;
next	1.8;

1.8
date	2011.08.01.06.09.28;	author kerryveenstra;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.26.01.49.18;	author kerryveenstra;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.20.22.16.20;	author kerryveenstra;	state Exp;
branches;
next	1.5;

1.5
date	2011.06.30.05.35.54;	author kerryveenstra;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.07.19.12.13;	author kerryveenstra;	state Exp;
branches;
next	1.3;

1.3
date	2011.05.05.04.55.44;	author kerryveenstra;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.25.15.17.06;	author kerryveenstra;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.25.11.08.40;	author kerryveenstra;	state Exp;
branches;
next	;


desc
@write BMP from SRTM and CVIS data
@


1.14
log
@improved comments
@
text
@/**************************************************************************

File:           bmp.h

Description:    Bitmap file I/O functions.  One uses these functions to
                save images of the results of computations.  One also can
                use these functions to convert BMP files into MATLAB
                matrices.

                These functions read and write 256-color BMP files.  The
                table below shows the source and destination of each
                function.

Global Functions:

            Function                            Source          Destination
            --------------------------------    ------------    -----------
            bmp_cvis_wang_write()               Visibility      BMP file
            bmp_int_array_write()               Cumul. Vis.     BMP file
            bmp_srtm_write()                    Elevation       BMP file
            bmp_srtm_v_write()                  Elev. + Vis.    BMP file

            bmp_bitmap_read()                   BMP file        BMP_BITMAP
            bmp_bitmap_write_matlab_matrix()    BMP_BITMAP      MATLAB file

**************************************************************************/

typedef struct
{
    int             height;
    int             width;
    int             palette[256];
    unsigned char **a;
} BMP_BITMAP;

void bmp_srtm_write
(
    const SRTM_TILE *srtm,
    const char      *filename,
    int              num_viewpoints,
    int             *pi,
    int             *pj
);

void bmp_srtm_v_write
(
    const SRTM_TILE *srtm,
    char           **visible,
    const char      *filename,
    int              num_viewpoints,
    int             *pi,
    int             *pj
);

void bmp_cvis_wang_write
(
    const CVIS_WANG *v,
    const char      *filename
);

void bmp_int_array_write
(
    int            **v,
    const char      *filename,
    int              h_min,
    int              h_max,
    int              i_min,
    int              i_max,
    int              j_min,
    int              j_max
);

void bmp_bitmap_read
(
    BMP_BITMAP *bmp,
    const char *filename
);

void bmp_bitmap_write_matlab_matrix
(
    BMP_BITMAP *bmp,
    const char *filename
);

@


1.13
log
@added bmp_srtm_v_write()
@
text
@d1 27
@


1.12
log
@added parameters to bmp_srtm_write()
@
text
@d18 10
@


1.11
log
@move i and j limits into structs
@
text
@d12 4
a15 1
    const char      *filename
@


1.10
log
@reverting to version as of 2011/07/17
@
text
@d12 1
a12 7
    const char      *filename,
    int              h_min,
    int              h_max,
    int              i_min,
    int              i_max,
    int              j_min,
    int              j_max
d18 1
a18 5
    const char      *filename,
    int              i_min,
    int              i_max,
    int              j_min,
    int              j_max
@


1.9
log
@change reserved* parameters into longitude and latitude
@
text
@a0 4
/*
 *  File:       bmp.h
 */

a4 2
    double          longitude;
    double          latitude;
a12 2
    double           longitude,
    double           latitude,
a24 2
    double           longitude,
    double           latitude,
a34 2
    double           longitude,
    double           latitude,
a51 7
    const char *filename,
    const char *matrix_name
);

void bmp_bitmap_write_google_map_html
(
    BMP_BITMAP *bmp,
@


1.8
log
@allow getting/setting of reserved1 and reserved2 fields
@
text
@d9 2
a10 2
    int             reserved1;
    int             reserved2;
d19 2
a20 2
    int              reserved1,
    int              reserved2,
d33 2
a34 2
    int              reserved1,
    int              reserved2,
d45 2
a46 2
    int              reserved1,
    int              reserved2,
@


1.7
log
@added bmp_bitmap_write_google_map.html
@
text
@d9 2
d19 2
d33 2
d45 2
@


1.6
log
@added matrix_name field
@
text
@d1 4
d60 6
@


1.5
log
@added BMP_BITMAP type
added prototypes for bmp_bitmap_read()
and bmp_bitmap_write_matlab_matrix()
@
text
@d52 2
a53 1
    const char *filename
@


1.4
log
@removed const (probably needed to fix warning)
@
text
@d1 8
d42 13
@


1.3
log
@added bmp_int_array_write()
@
text
@d25 1
a25 1
    const int      **v,
@


1.2
log
@add boundary parameters to BMP-writing functions
@
text
@d22 12
@


1.1
log
@Initial revision
@
text
@d1 11
a11 2
void bmp_cvis_wang_write (const CVIS_WANG *v, const char *filename);
void bmp_srtm_write (const SRTM_TILE *srtm, const char *filename);
d13 9
@
