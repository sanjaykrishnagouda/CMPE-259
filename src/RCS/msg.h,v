head	1.2;
access;
symbols
	ver1_2:1.1
	ver1_12:1.1
	ver1_11:1.1
	ver1_1:1.1
	ver1_03:1.1
	ver1_02:1.1
	v1_01:1.1
	v1_0:1.1
	beta1:1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.06.14.02.45.00;	author kerryveenstra;	state Exp;
branches;
next	1.1;

1.1
date	2011.08.05.16.16.01;	author kerryveenstra;	state Exp;
branches;
next	;


desc
@header file for message functions
@


1.2
log
@improved comments
@
text
@/**************************************************************************

File:           msg.h

Description:    Provide a service for reporting messages to the user.

Global Functions:

                msg_message(msg, ...)
                msg_error(msg, ...)

Global Macros:  

                INTERNAL_ERROR(msg)
                INTERNAL_ERROR_1(msg, param)
                INTERNAL_ERROR_2(msg, param1, param2)

**************************************************************************/

#define ASSERT(CONDITION) \
    if (!(CONDITION)) msg_condition_failed(__FILE__, __LINE__, #CONDITION)

#define INTERNAL_ERROR(MESSAGE) \
    msg_internal_error(__FILE__, __LINE__, MESSAGE)

#define INTERNAL_ERROR_1(MESSAGE, PARAM) \
    msg_internal_error(__FILE__, __LINE__, MESSAGE, PARAM)

#define INTERNAL_ERROR_2(MESSAGE, PARAM1, PARAM2) \
    msg_internal_error(__FILE__, __LINE__, MESSAGE, PARAM1, PARAM2)

void msg_message(const char *message, ...);
void msg_error(const char *message, ...);
void msg_internal_error(const char *filename, int line, const char *message, ...);
void msg_assertion_failed(const char *filename, int line, const char *condition, ...);
@


1.1
log
@Initial revision
@
text
@d1 19
@
